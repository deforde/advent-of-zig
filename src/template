const std = @import("std");
const readFileIntoBuf = @import("util.zig").readFileIntoBuf;

fn solve1(path: []const u8) anyerror!usize {
    var gpa = std.heap.GeneralPurposeAllocator(.{}){};
    const allocator = gpa.allocator();
    defer std.debug.assert(!gpa.deinit());

    const buf = try readFileIntoBuf(allocator, path);
    defer allocator.free(buf);

    const ans: usize = 0;
    return ans;
}

fn example1() anyerror!usize {
    return solve1("problems/example_01.txt");
}

test "example1" {
    const ans = try example1();
    try std.testing.expectEqual(@as(usize, 0), ans);
}
